import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
from tkcalendar import DateEntry

# Función para agregar un evento
def agregar_evento():
    fecha = date_picker.get()
    hora = entry_hora.get()
    descripcion = entry_descripcion.get()
    
    if fecha and hora and descripcion:
        treeview.insert('', 'end', values=(fecha, hora, descripcion))
        entry_hora.delete(0, tk.END)
        entry_descripcion.delete(0, tk.END)
    else:
        messagebox.showwarning("Campos vacíos", "Por favor, rellene todos los campos.")

# Función para eliminar un evento seleccionado
def eliminar_evento():
    selected_item = treeview.selection()
    if selected_item:
        confirmar = messagebox.askyesno("Confirmar", "¿Seguro que deseas eliminar el evento seleccionado?")
        if confirmar:
            treeview.delete(selected_item)
    else:
        messagebox.showwarning("Selección", "Por favor, seleccione un evento para eliminar.")

# Configuración de la ventana principal
root = tk.Tk()
root.title("Gestor de Eventos")
root.geometry("600x400")

# Frame para la lista de eventos
frame_eventos = tk.Frame(root)
frame_eventos.pack(pady=10)

# Crear un Treeview para mostrar los eventos
treeview = ttk.Treeview(frame_eventos, columns=("Fecha", "Hora", "Descripción"), show='headings', height=8)
treeview.pack()

# Encabezados del Treeview
treeview.heading('Fecha', text="Fecha")
treeview.heading('Hora', text="Hora")
treeview.heading('Descripción', text="Descripción")

# Frame para la entrada de datos
frame_datos = tk.Frame(root)
frame_datos.pack(pady=10)

# Etiquetas y campos de entrada
tk.Label(frame_datos, text="Fecha:").grid(row=0, column=0, padx=5, pady=5)
date_picker = DateEntry(frame_datos, width=15)
date_picker.grid(row=0, column=1, padx=5, pady=5)

tk.Label(frame_datos, text="Hora:").grid(row=1, column=0, padx=5, pady=5)
entry_hora = tk.Entry(frame_datos)
entry_hora.grid(row=1, column=1, padx=5, pady=5)

tk.Label(frame_datos, text="Descripción:").grid(row=2, column=0, padx=5, pady=5)
entry_descripcion = tk.Entry(frame_datos)
entry_descripcion.grid(row=2, column=1, padx=5, pady=5)

# Frame para los botones de acción
frame_botones = tk.Frame(root)
frame_botones.pack(pady=10)

# Botones de acción
btn_agregar = tk.Button(frame_botones, text="Agregar Evento", command=agregar_evento)
btn_agregar.grid(row=0, column=0, padx=10)

btn_eliminar = tk.Button(frame_botones, text="Eliminar Evento Seleccionado", command=eliminar_evento)
btn_eliminar.grid(row=0, column=1, padx=10)

btn_salir = tk.Button(frame_botones, text="Salir", command=root.quit)
btn_salir.grid(row=0, column=2, padx=10)

# Iniciar la interfaz
root.mainloop()
